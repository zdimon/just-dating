server {
    listen 80;
    server_name neuraldating.com;
    server_name www.neuraldating.com;
    server_name prod.neuraldating.com;
    return 301 https://$host$request_uri;
}

# front
upstream prodfront{
    server 172.17.8.13:3000;
}

# media
upstream prodmedia{
    server 172.17.8.13:8080;
}

# django manager.py --> 8085
upstream proddjango {
    server 172.17.8.13:8085;
}

server {
    server_name neuraldating.com;
    server_name www.neuraldating.com;
    server_name prod.neuraldating.com;
    listen 443 ssl;

    ssl on;

    ssl_certificate     /etc/letsencrypt/live/neuraldating.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/neuraldating.com/privkey.pem;

    location / {
        proxy_pass		http://prodfront;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_set_header        X-Forwarded-Protocol $scheme;
    }

    location /ws {
	proxy_pass		http://proddjango;
        # for http redirect
        proxy_pass_header	Server;
        proxy_set_header	X-Real-IP $remote_addr;
        proxy_set_header	Host $http_host;
        proxy_set_header	X-Scheme $scheme;
        # for websocks
        proxy_http_version 	1.1;
        proxy_set_header	Upgrade $http_upgrade;
        proxy_set_header	Connection "upgrade";
    }

}


upstream videos {
    server localhost:4445;
}

upstream vidutest {
    server localhost:4445;
}

server {
    server_name neuraldating.com;
    server_name www.neuraldating.com;
    server_name dev.neuraldating.com;
    server_name prod.neuraldating.com;
    listen 8883 ssl;

    ssl on;

    ssl_certificate     /etc/letsencrypt/live/neuraldating.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/neuraldating.com/privkey.pem;

    root /var/www/openvidu;
    location / {
	proxy_set_header	X-Real-IP       $remote_addr;
	proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header	Host $host;
        proxy_pass 		http://vidutest;
        proxy_http_version	1.1;
        proxy_set_header	Upgrade $http_upgrade;
        proxy_set_header	Connection "upgrade";
    }
}

server {
    client_max_body_size 100M;
    server_name api.neuraldating.com;
    listen 443 ssl;

    ssl on;

    ssl_certificate     /etc/letsencrypt/live/api.neuraldating.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.neuraldating.com/privkey.pem;

    location / {
	set $remote_uri $uri;
	#include locations/uploads-webp.conf;
        proxy_pass		http://proddjango;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_set_header        X-Forwarded-Protocol $scheme;
    }

    location /media {
	root cache;
        expires 30d;
	add_header Cache-Control public;
	tcp_nodelay off;
        proxy_pass		http://prodmedia;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_set_header        X-Forwarded-Protocol $scheme;
    }

    location /notifications/events {
	set $remote_uri $uri;
        proxy_pass		http://proddjango;
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, OPTIONS, POST, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/html; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'PUT') {
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, OPTIONS, POST, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, OPTIONS, POST, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Amz-Date';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_set_header        X-Forwarded-Protocol $scheme;
    }
    location /ws {
	proxy_pass		http://proddjango;
        # for http redirect
        proxy_pass_header	Server;
        proxy_set_header	X-Real-IP $remote_addr;
        proxy_set_header	Host $http_host;
        proxy_set_header	X-Scheme $scheme;
        # for websocks
        proxy_http_version 	1.1;
        proxy_set_header	Upgrade $http_upgrade;
        proxy_set_header	Connection "upgrade";
    }
}
